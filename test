1) Write a program that prints the numbers from 1 to 100. But for multiples of three print "Fizz" instead of the number
and for multiples of five print "Buzz". For numbers which are multiples of both three and five print "FizzBuzz".

2) Marvin is addicted to 'Angry Birds’, which became huge in the vicinity of Betelgeuse.
The game has multiple stages, and for each stage the player can gain between 0 and 3 stars, inclusive.
You are given a String[] result, containing Marvin's results.
For each stage, result[i] contains an element that specifies Marvin's result in that stage. For example, if he got 0 stars in stage i, result[i] would be “---”.
 For 1 star, result[i] would be “*--”, and so on. Return the total number of stars Marvin has at the moment.

3) Suppose that we're given a moment of time written as HH:MM, where HH is the hour and MM is the minutes,
and a clock that beeps every time a creepy moment happens.
Let's say that a moment is considered  creepy if it is formatted as AB:AB, AA:BB, AB:BA or AA:AA.
You are given a String[] moments, where each element represents a single moment of time. Return how many times the clock beeped.
For example, for an input {"11:00","13:13","10:00"}, the result would be 2.

4) In soccer leagues, the winner of a match is awarded with 3 points and the loser 0 points.
In case of a tie, both teams are awarded with 1 point each.
Given int[] wins and int[] ties, and knowing that the i'th element of wins and ties correspond to the number of wins and
 ties respectively for team i; return the number of points the champion team achieved in this league. For inputs wins = {1,0,3} and
  ties = {2, 2, 0}, the result would be 9 (the team at i=2 would win this championship).

5) After the death of the Death Star, the Empire is reviewing all the component buying orders.
As the DBA of a company that is specialized in building exhaust vents,
you are required to send to Lord Vader himself a list of all orders that were made and how much they did cost.
To do so, you need to create a SQL query that returns the total value of each order made by CustomerName "DeathStar",
showing the OrderID and TotalPrice (one order per row).